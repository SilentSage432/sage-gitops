apiVersion: apps/v1
kind: Deployment
metadata:
  name: epsilon-ui
  namespace: arc-epsilon
  labels: { app: epsilon-ui }
spec:
  replicas: 1
  selector: { matchLabels: { app: epsilon-ui } }
  template:
    metadata:
      labels: { app: epsilon-ui }
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        seccompProfile: { type: RuntimeDefault }
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports: [ { name: http, containerPort: 80 } ]
        volumeMounts:
          - { name: html, mountPath: /usr/share/nginx/html, readOnly: true }
        readinessProbe:
          httpGet: { path: /, port: http }
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /, port: http }
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
      volumes:
        - name: html
          configMap: { name: ui-content }
      nodeSelector: { kubernetes.io/os: linux }
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
          # allow scheduling on single-node control-plane
