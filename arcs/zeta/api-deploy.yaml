apiVersion: apps/v1
kind: Deployment
metadata:
  name: observer-api
  namespace: arc-zeta
  labels: { app: observer-api }
spec:
  replicas: 1
  selector: { matchLabels: { app: observer-api } }
  template:
    metadata:
      labels: { app: observer-api }
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        seccompProfile: { type: RuntimeDefault }
      workingDir: /app
      containers:
      - name: api
        image: python:3.11-slim
        command: ["sh","-lc"]
        args:
          - |
            set -e
            pip install --no-cache-dir --upgrade fastapi "uvicorn[standard]" nats-py
            exec uvicorn app:app --host 0.0.0.0 --port 8080 --app-dir /app
        env:
          - { name: PYTHONUNBUFFERED, value: "1" }
          - { name: NATS_URL, value: "nats://nats.infra.svc.cluster.local:4222" }
          - { name: NATS_SUBJECT, value: "arc.>" }
        ports:
          - { name: http, containerPort: 8080 }
        readinessProbe:
          httpGet: { path: /health, port: http }
          initialDelaySeconds: 6
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /health, port: http }
          initialDelaySeconds: 12
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities: { drop: ["ALL"] }
        volumeMounts:
          - { name: site, mountPath: /opt/site }
          - { name: code, mountPath: /app }
      volumes:
        - { name: site, emptyDir: {} }
        - { name: code, configMap: { name: observer-api-code, items: [{ key: app.py, path: app.py }] } }
      nodeSelector: { kubernetes.io/os: linux }
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
