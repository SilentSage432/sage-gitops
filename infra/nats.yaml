---
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: infra
  labels: { app: nats }
spec:
  selector: { app: nats }
  ports:
    - { name: client,  port: 4222, targetPort: 4222 }
    - { name: monitor, port: 8222, targetPort: 8222 }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
  namespace: infra
  labels: { app: nats }
spec:
  replicas: 1
  selector:
    matchLabels: { app: nats }
  template:
    metadata:
      labels: { app: nats }
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        seccompProfile: { type: RuntimeDefault }
      containers:
        - name: nats
          image: nats:2.10.29
          args:
            - -js              # enable JetStream
            - -sd              # set storage dir
            - /data
            - -p
            - "4222"
            - -m
            - "8222"
          ports:
            - { name: client,  containerPort: 4222 }
            - { name: monitor, containerPort: 8222 }
          readinessProbe:
            httpGet: { path: /varz, port: monitor }
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /varz, port: monitor }
            initialDelaySeconds: 10
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: ["ALL"] }
          volumeMounts:
            - { name: data, mountPath: /data }
      volumes:
        - name: data
          emptyDir: {}
      nodeSelector: { kubernetes.io/os: linux }
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
