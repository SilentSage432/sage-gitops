apiVersion: v1
kind: Namespace
metadata:
  name: cloudflared
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflared-token
  namespace: cloudflared
type: Opaque
stringData:
  TUNNEL_TOKEN: eyJhIjoiMTUxMzlmYzZhMjk5NGRjY2VmYTZiMjAwMzFhZTBmYmUiLCJ0IjoiZjdhODQzZjQtMTE1NS00N2RkLWEyMDItMzU5MGNhN2ZjZTU2IiwicyI6IlpUSmlZbUl5WkRrdE5qZG1OUzAwWkRaaUxUaGxZekV0TUdWbFlUWXhNMlk0WXpFeiJ9
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: cloudflared
  labels:
    app: cloudflared
spec:
  replicas: 1
  selector:
    matchLabels: { app: cloudflared }
  template:
    metadata:
      labels: { app: cloudflared }
    spec:
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared:2024.8.2
          args: ["tunnel","--no-autoupdate","run","--token","$(TUNNEL_TOKEN)"]
          env:
            - name: TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cloudflared-token
                  key: TUNNEL_TOKEN
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
