#!/usr/bin/env bash
set -euo pipefail

echo "=== Cloudflare Tunnel Setup for SAGE UI ==="
echo ""
echo "âœ… Cloudflared is now running successfully!"
echo "   Tunnel ID: b025c68c-cd5c-46b4-948e-936a869d579e"
echo "   Connector ID: e7e9e9d0-bbd7-4b72-a899-decb87e0a39f"
echo ""
echo "ðŸ”§ Next Steps:"
echo ""
echo "1. Add ingress rule for www.sagecraftalchemy.com:"
echo "   - Go to Cloudflare Dashboard â†’ Zero Trust â†’ Tunnels"
echo "   - Find tunnel b025c68c-cd5c-46b4-948e-936a869d579e"
echo "   - Click 'Configure' â†’ 'Public Hostname'"
echo "   - Add new rule:"
echo "     * Hostname: www.sagecraftalchemy.com"
echo "     * Service: http://sage-enterprise-ui.arc-ui.svc.cluster.local:8080"
echo ""
echo "2. Or use Cloudflare API:"
echo "   curl -X POST \"https://api.cloudflare.com/client/v4/accounts/\$ACCOUNT_ID/cfd_tunnel/b025c68c-cd5c-46b4-948e-936a869d579e/configurations\" \\"
echo "     -H \"Authorization: Bearer \$API_TOKEN\" \\"
echo "     -H \"Content-Type: application/json\" \\"
echo "     --data '{\"config\":{\"ingress\":[{\"hostname\":\"www.sagecraftalchemy.com\",\"service\":\"http://sage-enterprise-ui.arc-ui.svc.cluster.local:8080\"},{\"service\":\"http_status:404\"}]}}'"
echo ""
echo "3. Test the connection:"
echo "   kubectl -n cloudflare exec -it \$(kubectl -n cloudflare get pods -l app=cloudflared -o jsonpath='{.items[0].metadata.name}') -- curl -sS http://sage-enterprise-ui.arc-ui.svc.cluster.local:8080/ | head -5"
echo ""
echo "4. Once configured, test: https://www.sagecraftalchemy.com"
echo ""
echo "=== Current Status ==="
kubectl -n cloudflare get pods -l app=cloudflared
kubectl -n arc-ui get pods -l app=sage-enterprise-ui
echo ""
echo "=== Network Policy Applied ==="
echo "I've already applied the NetworkPolicy to allow cloudflared to reach the UI service."
echo ""
echo "ðŸŽ‰ SAGE UI is ready to be exposed via Cloudflare Tunnel!"